INSERT INTO dbo.Notes VALUES
-- (1, '<ul><li>Containers provide a means to center and horizontally pad your site’s contents. Use <code class="highlighter-rouge">.container</code> for a responsive pixel width or <code class="highlighter-rouge">.container-fluid</code> for <code class="highlighter-rouge">width: 100%</code> across all viewport and device sizes.</li><li>Rows are wrappers for columns. Each column has horizontal <code class="highlighter-rouge">padding</code> (called a gutter) for controlling the space between them. This <code class="highlighter-rouge">padding</code> is then counteracted on the rows with negative margins. This way, all the content in your columns is visually aligned down the left side.</li><li>In a grid layout, content must be placed within columns and only columns may be immediate children of rows.</li><li>Thanks to flexbox, grid columns without a specified <code class="highlighter-rouge">width</code> will automatically layout as equal width columns. For example, four instances of <code class="highlighter-rouge">.col-sm</code> will each automatically be 25% wide from the small breakpoint and up. See the <a href="#auto-layout-columns">auto-layout columns</a> section for more examples.</li><li>Column classes indicate the number of columns you’d like to use out of the possible 12 per row. So, if you want three equal-width columns across, you can use <code class="highlighter-rouge">.col-4</code>.</li><li>Column <code class="highlighter-rouge">width</code>s are set in percentages, so they’re always fluid and sized relative to their parent element.</li><li>Columns have horizontal <code class="highlighter-rouge">padding</code> to create the gutters between individual columns, however, you can remove the <code class="highlighter-rouge">margin</code> from rows and <code class="highlighter-rouge">padding</code> from columns with <code class="highlighter-rouge">.no-gutters</code> on the <code class="highlighter-rouge">.row</code>.</li><li>To make the grid responsive, there are five grid breakpoints, one for each <a href="/docs/4.4/layout/overview/#responsive-breakpoints">responsive breakpoint</a>: all breakpoints (extra small), small, medium, large, and extra large.</li> <li>Grid breakpoints are based on minimum width media queries, meaning <strong>they apply to that one breakpoint and all those above it</strong> (e.g., <code class="highlighter-rouge">.col-sm-4</code> applies to small, medium, large, and extra large devices, but not the first <code class="highlighter-rouge">xs</code> breakpoint).</li><li>You can use predefined grid classes (like <code class="highlighter-rouge">.col-4</code>) or <a href="#sass-mixins">Sass mixins</a> for more semantic markup.</li></ul>', '20191106 10:34:09 AM', 1),
-- (1, '<table class="table table-bordered table-striped"><thead><tr><th></th><th class="text-center">Extra small<br><small>&lt;576px</small></th><th class="text-center">Small<br><small>≥576px</small></th><th class="text-center">Medium<br><small>≥768px</small></th><th class="text-center">Large<br><small>≥992px</small></th><th class="text-center">Extra large<br><small>≥1200px</small></th>    </tr>  </thead>  <tbody>    <tr><th class="text-nowrap" scope="row">Max container width</th><td>None (auto)</td><td>540px</td><td>720px</td><td>960px</td><td>1140px</td>    </tr>    <tr><th class="text-nowrap" scope="row">Class prefix</th><td><code>.col-</code></td><td><code>.col-sm-</code></td><td><code>.col-md-</code></td><td><code>.col-lg-</code></td><td><code>.col-xl-</code></td>    </tr>    <tr><th class="text-nowrap" scope="row"># of columns</th><td colspan="5">12</td>    </tr>    <tr><th class="text-nowrap" scope="row">Gutter width</th><td colspan="5">30px (15px on each side of a column)</td></tr><tr><th class="text-nowrap" scope="row">Nestable</th><td colspan="5">Yes</td></tr><tr><th class="text-nowrap" scope="row">Column ordering</th><td colspan="5">Yes</td></tr></tbody></table>', '20191106 10:34:09 AM', 1),
-- (1, '', '20191106 10:34:09 AM', 1),
-- (1, '', '20191106 10:34:09 AM', 1),
